# set_new_acls.ldif
# This LDIF first removes ALL existing olcAccess rules and then adds the desired ACL rules.
# It ensures that 'phone' and 'printer' users (now in ou=service) have WRITE access on contacts,
# and anonymous access to contacts is denied.
#
# IMPORTANT: Bind as "cn=admin,cn=config" with LDAP_CONFIG_PASSWORD.

dn: olcDatabase={1}mdb,cn=config
changetype: modify
# Remove all existing olcAccess rules to start clean
delete: olcAccess
-
# Add the specific ACL for the ou=contacts entry AND its subtree (index {0})
# - Grants WRITE to 'printer' and 'phone' users (now in ou=service OU)
# - Grants read to any other authenticated user ('by users read')
# - Denies all access to anonymous users ('by anonymous none') for this subtree
add: olcAccess
olcAccess: {0}to dn.base="ou=contacts,dc=niwo,dc=home" by dn.exact="cn=printer,ou=service,dc=niwo,dc=home" write by dn.exact="cn=phone,ou=service,dc=niwo,dc=home" write by users read by anonymous none
-
add: olcAccess
olcAccess: {0}to dn.subtree="ou=contacts,dc=niwo,dc=home" by dn.exact="cn=printer,ou=service,dc=niwo,dc=home" write by dn.exact="cn=phone,ou=service,dc=niwo,dc=home" write by users read by anonymous none
-
# Add a general fallback ACL for the entire directory (index {1})
# - Allows users to write to their own entry ('by self write')
# - Grants read to any authenticated user ('by users read')
# - Allows anonymous users to authenticate (bind) but not read ('by anonymous auth')
# - Denies all access to everyone else ('by * none')
add: olcAccess
olcAccess: {1}to * by self write by users read by anonymous auth by * none

