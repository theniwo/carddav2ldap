---
volumes:
  ldap_data:
  ldap_config:
  sync_log:
  web_data:


services:
  ldap:
    image: osixia/openldap
    restart: unless-stopped
    env_file:
      - ./.env
    environment:
      # LDAP base DN configuration
      - LDAP_ORGANISATION=${LDAP_ORGANISATION:-example}
      - LDAP_DOMAIN=${LDAP_DOMAIN:-local}
      # Admin user configuration (password from .env file)
      - LDAP_ADMIN_PASSWORD=${LDAP_ADMIN_PASSWORD}
      # Forces re-initialization of the configuration on startup,
      # if the ldap_config volume is empty.
      - LDAP_REMOVE_CONFIG_AFTER_SETUP=true
      # Optional: TLS setup (uncomment and adjust paths if TLS is needed)
      # - LDAP_TLS_CRT_FILENAME=your.crt
      # - LDAP_TLS_KEY_FILENAME=your.key
      # - LDAP_TLS_CA_CRT_FILENAME=your_ca.crt
    ports:
      - "389:389"
      - "636:636"
    volumes:
      - ldap_data:/var/lib/ldap
      - ldap_config:/etc/ldap/slapd.d
      # Mount the corrected schema files to override the default schemas
      - ./ldap_schemas/core.ldif:/etc/ldap/schema/core.ldif:ro
      - ./ldap_schemas/cosine.ldif:/etc/ldap/schema/cosine.ldif:ro
      - ./ldap_schemas/inetorgperson.ldif:/etc/ldap/schema/inetorgperson.ldif:ro
      # Mount the directory with initialization LDIFs (e.g., for OUs)
      - ./ldap_init_config:/container/service/slapd/assets/config/bootstrap/ldif/custom:ro
    healthcheck:
      test: ["CMD", "ldapwhoami", "-x", "-H", "ldap://localhost"]
      interval: 5s
      timeout: 5s
      retries: 10

  sync:
    build: .
    depends_on:
      - ldap
    restart: unless-stopped
    environment:
      # CardDAV Configuration
      - CARDDAV_BASE_DISCOVERY_URL=${CARDDAV_BASE_DISCOVERY_URL}
      - CARDDAV_USERNAME=${CARDDAV_USERNAME}
      - CARDDAV_PASSWORD=${CARDDAV_PASSWORD}
      - CARDDAV_SSL_VERIFY=${CARDDAV_SSL_VERIFY:-true}
      - CARDDAV_IMPORT_PHOTOS=${CARDDAV_IMPORT_PHOTOS:-false}
      # LDAP Configuration
      - LDAP_SERVER=${LDAP_SERVER:-ldap://ldap:389} # Uses the service name 'ldap'
      - LDAP_BASE_DN=${LDAP_BASE_DN:-ou=contacts,dc=example,dc=com}
      - LDAP_USER=${LDAP_USER:-cn=admin,dc=example,dc=com}
      - LDAP_PASSWORD=${LDAP_ADMIN_PASSWORD} # Uses the admin password for the sync user
      # Debug Settings
      - DEBUG=${DEBUG:-false}
      - CENSOR_SECRETS_IN_LOGS=${CENSOR_SECRETS_IN_LOGS:-true}
      # Cron Job Timer as Variable
      - CRON_SCHEDULE=${CRON_SCHEDULE:-*/30 * * * *} # Default: every 30 minutes
      # Whitelist/Blacklist Variables (examples, can be adjusted)
      - CARDDAV_EMAIL_WHITELIST_DOMAINS=${CARDDAV_EMAIL_WHITELIST_DOMAINS:-} # Comma-separated: example.com,test.org
      - CARDDAV_EMAIL_BLACKLIST_DOMAINS=${CARDDAV_EMAIL_BLACKLIST_DOMAINS:-} # Comma-separated: spam.com,bad.net
      - CARDDAV_CATEGORY_WHITELIST=${CARDDAV_CATEGORY_WHITELIST:-} # Comma-separated: Family,Friends
      - CARDDAV_CATEGORY_BLACKLIST=${CARDDAV_CATEGORY_BLACKLIST:-} # Comma-separated: Spam,Blocked
      # Whitelist/Blacklist Variables for entire address books
      - CARDDAV_ADDRESSBOOK_WHITELIST=${CARDDAV_ADDRESSBOOK_WHITELIST:-} # Comma-separated: personal,work
      - CARDDAV_ADDRESSBOOK_BLACKLIST=${CARDDAV_ADDRESSBOOK_BLACKLIST:-} # Comma-separated: archived,spam
    env_file:
      - ./.env
    volumes:
      - sync_log:/var/log/carddav2ldap
    # Ensures that the LDAP service is running before the sync service starts
    depends_on:
      ldap:
        condition: service_healthy

  web: # used for provisioning
    image: nginx:stable-alpine
    restart: unless-stopped
    volumes:
      - web_data:/usr/share/nginx/html:ro
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "8080:80"

  phpldapadmin:
    image: osixia/phpldapadmin
    environment:
      PHPLDAPADMIN_LDAP_HOSTS: ${LDAP_HOST}
      PHPLDAPADMIN_HTTPS: ${HTTPS}
    ports:
      - "${ADMIN_PORT}:80"
    depends_on:
      - ldap
