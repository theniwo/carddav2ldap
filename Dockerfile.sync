# Use a Python image as base
FROM python:3.9-slim

# Create working directory
WORKDIR /app

# Set default values for environment variables
ENV \
    LDAP_SERVER="ldap://ldap:389" \
    CARDDAV_SSL_VERIFY="true" 

# Install build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    gcc \
    libsasl2-dev \
    libldap2-dev \
    cron \
    tini \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# Install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Cleanup
RUN rm requirements.txt -rf
#RUN rm requirements.txt -rf && apt-get remove -y $(dpkg -l | grep ^ii| awk '{print $2 " "}' | cut -d: -f1 | grep -e gcc -e dev$ | grep -ve libgcc -e base | awk '{printf $1 " "}') && apt-get autoremove -y

# Copy scripts
COPY sync_script.sh .
COPY sync_script.py .
COPY docker-entrypoint.sh /usr/local/bin/docker-entrypoint.sh

# Make scripts executable
RUN chmod +x /app/sync_script.sh
RUN chmod +x /app/sync_script.py
RUN chmod +x /usr/local/bin/docker-entrypoint.sh

# Use Tini as init system to avoid zombie processes and handle signals correctly
ENTRYPOINT ["/usr/bin/tini", "--", "/usr/local/bin/docker-entrypoint.sh"]
# Start cron daemon
CMD ["cron", "-f"]

