# Dockerfile.ldap
# This Dockerfile builds a custom OpenLDAP image with embedded schema files and initial LDIFs.

# Use the official osixia/openldap image as base
FROM osixia/openldap:1.5.0

# Set the working directory (optional, but good practice)
WORKDIR /app

# Copy the custom schema files into the image
# These files should be placed in a directory named 'ldap_schemas' relative to this Dockerfile.
# Ensure these are the *corrected* schema files (uncommented lines, no SINGLE-VALUE for multi-valued attributes).
COPY ./ldap_init_config/schemas/core.ldif /etc/ldap/schema
COPY ./ldap_init_config/schemas/cosine.ldif /etc/ldap/schema
COPY ./ldap_init_config/schemas/inetorgperson.ldif /etc/ldap/schema
#COPY ./ldap_schemas/core.ldif /etc/ldap/schema/core.ldif
#COPY ./ldap_schemas/cosine.ldif /etc/ldap/schema/cosine.ldif
#COPY ./ldap_schemas/inetorgperson.ldif /etc/ldap/schema/inetorgperson.ldif

# Copy the initial LDIF files into the image
# These files will be loaded by the osixia/openldap container on first setup.
# Ensure these are placed in a directory named 'ldap_init_config' relative to this Dockerfile.
COPY ./ldap_init_config/data/ /container/service/slapd/assets/config/bootstrap/ldif/custom/data/

# Copy the custom LDAP entrypoint script and make it executable
# This script will handle the explicit cleanup of the config directory at runtime.
COPY ldap-entrypoint.sh /usr/local/bin/ldap-entrypoint.sh
RUN chmod +x /usr/local/bin/ldap-entrypoint.sh

# Expose LDAP ports (already exposed by base image, but good practice to list)
EXPOSE 389 636

# Set the custom entrypoint for the container.
# This ensures our cleanup logic runs before the original osixia/openldap entrypoint.
ENTRYPOINT ["/usr/local/bin/ldap-entrypoint.sh"]

# The base image's CMD will be passed as arguments to our new entrypoint.
# No CMD needed here, as the base image provides it.

